"""Stub file for reflex_chakra/components/forms/iconbutton.py"""

# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from collections.abc import Mapping, Sequence
from typing import (
    Any,
)

from reflex.components.component import Component
from reflex.components.core.breakpoints import Breakpoints
from reflex.event import (
    EventType,
    PointerEventInfo,
)
from reflex.vars.base import Var

from reflex_chakra.components.typography.text import Text

class IconButton(Text):
    @classmethod
    def create(
        cls,
        *children,
        type: Var[str] | str | None = None,
        aria_label: Var[str] | str | None = None,
        icon: Component | Var[Component] | None = None,
        is_active: Var[bool] | bool | None = None,
        is_disabled: Var[bool] | bool | None = None,
        is_loading: Var[bool] | bool | None = None,
        is_round: Var[bool] | bool | None = None,
        spinner: Var[str] | str | None = None,
        as_: Var[str] | str | None = None,
        no_of_lines: Var[int] | int | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        ref: Var | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: EventType[()] | None = None,
        on_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_context_menu: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_double_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_focus: EventType[()] | None = None,
        on_mount: EventType[()] | None = None,
        on_mouse_down: EventType[()] | None = None,
        on_mouse_enter: EventType[()] | None = None,
        on_mouse_leave: EventType[()] | None = None,
        on_mouse_move: EventType[()] | None = None,
        on_mouse_out: EventType[()] | None = None,
        on_mouse_over: EventType[()] | None = None,
        on_mouse_up: EventType[()] | None = None,
        on_scroll: EventType[()] | None = None,
        on_scroll_end: EventType[()] | None = None,
        on_unmount: EventType[()] | None = None,
        **props,
    ) -> IconButton:
        """Create a new Chakra component.

        Args:
            *children: The children of the component.
            type: The type of button.
            aria_label:  A label that describes the button
            icon: The icon to be used in the button.
            is_active: If true, the button will be styled in its active state.
            is_disabled: If true, the button will be disabled.
            is_loading: If true, the button will show a spinner.
            is_round: If true, the button will be perfectly round. Else, it'll be slightly round
            spinner: Replace the spinner component when isLoading is set to true
            as_: Override the tag. The default tag is `<p>`.
            no_of_lines: Truncate text after a specific number of lines. It will render an ellipsis when the text exceeds the width of the viewport or max_width prop.
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            ref: The Var to pass as the ref to the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The properties of the component.

        Returns:
            A new Chakra component.
        """
