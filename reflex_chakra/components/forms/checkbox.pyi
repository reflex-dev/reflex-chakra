"""Stub file for reflex_chakra/components/forms/checkbox.py"""

# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from collections.abc import Mapping, Sequence
from typing import (
    Any,
    Literal,
)

from reflex.components.core.breakpoints import Breakpoints
from reflex.event import (
    EventType,
    PointerEventInfo,
)
from reflex.vars.base import Var

from reflex_chakra.components import ChakraComponent

class Checkbox(ChakraComponent):
    @classmethod
    def create(
        cls,
        *children,
        color_scheme: Literal[
            "blackAlpha",
            "blue",
            "cyan",
            "facebook",
            "gray",
            "green",
            "linkedin",
            "messenger",
            "none",
            "orange",
            "pink",
            "purple",
            "red",
            "teal",
            "telegram",
            "twitter",
            "whatsapp",
            "whiteAlpha",
            "yellow",
        ]
        | Var[
            Literal[
                "blackAlpha",
                "blue",
                "cyan",
                "facebook",
                "gray",
                "green",
                "linkedin",
                "messenger",
                "none",
                "orange",
                "pink",
                "purple",
                "red",
                "teal",
                "telegram",
                "twitter",
                "whatsapp",
                "whiteAlpha",
                "yellow",
            ]
        ]
        | None = None,
        size: Literal["lg", "md", "sm"] | Var[Literal["lg", "md", "sm"]] | None = None,
        is_checked: Var[bool] | bool | None = None,
        is_disabled: Var[bool] | bool | None = None,
        is_focusable: Var[bool] | bool | None = None,
        is_indeterminate: Var[bool] | bool | None = None,
        is_invalid: Var[bool] | bool | None = None,
        is_read_only: Var[bool] | bool | None = None,
        is_required: Var[bool] | bool | None = None,
        name: Var[str] | str | None = None,
        value: Var[str] | str | None = None,
        spacing: Var[str] | str | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        ref: Var | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: EventType[()] | None = None,
        on_change: EventType[Any] | None = None,
        on_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_context_menu: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_double_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_focus: EventType[()] | None = None,
        on_mount: EventType[()] | None = None,
        on_mouse_down: EventType[()] | None = None,
        on_mouse_enter: EventType[()] | None = None,
        on_mouse_leave: EventType[()] | None = None,
        on_mouse_move: EventType[()] | None = None,
        on_mouse_out: EventType[()] | None = None,
        on_mouse_over: EventType[()] | None = None,
        on_mouse_up: EventType[()] | None = None,
        on_scroll: EventType[()] | None = None,
        on_scroll_end: EventType[()] | None = None,
        on_unmount: EventType[()] | None = None,
        **props,
    ) -> Checkbox:
        """Create a new Chakra component.

        Args:
            *children: The children of the component.
            color_scheme: Color scheme for checkbox.  Options:  "whiteAlpha" | "blackAlpha" | "gray" | "red" | "orange" | "yellow" | "green" | "teal" | "blue" | "cyan"  | "purple" | "pink" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram"
            size: "sm" | "md" | "lg"
            is_checked: If true, the checkbox will be checked.
            is_disabled: If true, the checkbox will be disabled
            is_focusable: If true and is_disabled is passed, the checkbox will remain tabbable but not interactive
            is_indeterminate: If true, the checkbox will be indeterminate. This only affects the icon shown inside checkbox and does not modify the is_checked var.
            is_invalid: If true, the checkbox is marked as invalid. Changes style of unchecked state.
            is_read_only: If true, the checkbox will be readonly
            is_required: If true, the checkbox input is marked as required, and required attribute will be added
            name: The name of the input field in a checkbox (Useful for form submission).
            value: The value of the input field when checked (use is_checked prop for a bool)
            spacing: The spacing between the checkbox and its label text (0.5rem)
            on_change: Fired when the checkbox is checked or unchecked
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            ref: The Var to pass as the ref to the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The properties of the component.

        Returns:
            A new Chakra component.
        """

class CheckboxGroup(ChakraComponent):
    @classmethod
    def create(
        cls,
        *children,
        value: Var[str] | str | None = None,
        default_value: Var[str] | str | None = None,
        is_disabled: Var[bool] | bool | None = None,
        is_native: Var[bool] | bool | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        ref: Var | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: EventType[()] | None = None,
        on_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_context_menu: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_double_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_focus: EventType[()] | None = None,
        on_mount: EventType[()] | None = None,
        on_mouse_down: EventType[()] | None = None,
        on_mouse_enter: EventType[()] | None = None,
        on_mouse_leave: EventType[()] | None = None,
        on_mouse_move: EventType[()] | None = None,
        on_mouse_out: EventType[()] | None = None,
        on_mouse_over: EventType[()] | None = None,
        on_mouse_up: EventType[()] | None = None,
        on_scroll: EventType[()] | None = None,
        on_scroll_end: EventType[()] | None = None,
        on_unmount: EventType[()] | None = None,
        **props,
    ) -> CheckboxGroup:
        """Create a new Chakra component.

        Args:
            *children: The children of the component.
            value: The value of the checkbox group
            default_value: The initial value of the checkbox group
            is_disabled: If true, all wrapped checkbox inputs will be disabled
            is_native: If true, input elements will receive checked attribute instead of isChecked. This assumes, you're using native radio inputs
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            ref: The Var to pass as the ref to the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The properties of the component.

        Returns:
            A new Chakra component.
        """
